library(optimx)
library(numDeriv)
library(optimx)
search()
find.packages("devtools")
find.package("devtools")
find.package("devtools")
find.packages("devtools")
find.package("devtools")
install.packages("devtools")
find_rtools()
find_rtools()
library(devtools)
find_rtools()
library("bitops", lib.loc="~/R/win-library/3.1")
detach("package:bitops", unload=TRUE)
install.packages("Rcpp")
library('swirl')
swirl()
exit
0
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z-<3
z<-3
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
?solve
save.image("C:\\R\\ProgrammingAssignment2\\.RData")
source('cachematrixTuong'
0
source('cachematrixTuong')
source('cachematrixTuong.R')
ls
?matrix
mdat <- matrix(c(1,2,3,4,5,6,7,8,9), nrow = 3, ncol = 3)
mdat
x <- makemakeCacheMatrix(mdat)
x <- makeCacheMatrix(mdat)
?NULL
x <- makeCacheMatrix(mdat)
vect <- c(1,2,3,4,5,6,7,8,9,10)
source('cachematrixTuong.R')
x <- makeVector(vect)
source('cachematrixTuong.R')
x <- makeVector(vect)
cachemean(x)
cachemean(x)
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
}
cachemean(x)
cachemean(x)
cachemean(x)
vect <- c(1,2,3,4,5,6,7,8,9,11)
cachemean(x)
x <- makeVector(vect)
cachemean(x)
cachemean(x)
source('cachematrixTuong.R')
mdat <- matrix(c(1,2,3,4,5,6,7,8,9), nrow = 3, ncol = 3)
x <- makeCacheMatrix(mdat)
cacheSolve(x)
mdat <- matrix(c(4,3,3,2), nrow = 2, ncol = 2)
x <- makeCacheMatrix(mdat)
cacheSolve(x)
cacheSolve(x)
q()
q()
